msg_tse_buf()
{
  __message "qc\t", qcount, "\tmC\t", tse_buf.minuteCount, "\tcC\t", tse_buf.captureCount;
  return 0;
}
msg_sum()
{
  __var H0; 
  __var H1;   
  __var H2;   
  __var	H3; 
  __var	Hdiff;   
  H0 = prvHistory[0].captureCount;
  H1 = prvHistory[1].captureCount;
  H2 = prvHistory[2].captureCount;
  H3 = prvHistory[3].captureCount;
  Hdiff = prvHistory[h1].captureCount - prvHistory[h0].captureCount; 
  __message "H0\tH1\tH2\tH3\tstart\tj\tH[h1]-H[h0]";
  __message H0, "\t", H1, "\t", H2,"\t", H3,"\t", start, "\t", j, "\t", Hdiff;
  return 0;
}
renamed_msg_sum()
{
  __message "cC0: 0x", prvHistory[h0].captureCount:%X, "\tcC1: 0x", prvHistory[h1].captureCount:%X, "index: ", index, "\ti: ", i, "\tdiff: ", prvHistory[hi].captureCount - cC, "sum: ", sum:%X, "\tsum//:", sum/4/0xF0000;
  return 0;
}
r2_msg_sum()
{
  __message "cC0\tcC1\tindex\ti\tdiff\tsum\tsum//:", sum/4/0xF0000;
  __message "0x", prvHistory[h0].captureCount:%X, "\t0x", prvHistory[h1].captureCount:%X, "\t", index, "\t", i, "\t", prvHistory[h1].captureCount - prvHistory[h0].captureCount, "\t0x", sum:%X, "\t", sum/4/0xF0000;  
  return 0;
}

msg_r0_4()
{
  __message "r0 0x", #R0:%X, "\tr1 0x", #R1:%X, "\tr2 0x", #R2:%X, "\tr3 0x", #R3:%X, "\tr4 0x", #R4:%X;
  return 0;
}
msg_list()
{
  __message pxIterator;
  return 0;
}